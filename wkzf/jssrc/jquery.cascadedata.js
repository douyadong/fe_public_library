/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. 插件名称：cascadedata
2. 插件描述：级联数据选择，城市->区域->门店->经纪人
3. 版本：1.0
4.  对其他插件的依赖：无
5. 备注：
6. 未尽事宜：
7. 作者：赵华刚(zhaohuagang@lifang.com)
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
(function($){
    $.fn.cascadeData = function(options){		
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        将每个cascadeData加上对应的配置属性
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        var opts = $.extend({}, $.fn.cascadeData.defaults, options) ;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        执行事件添加后返回
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        return this.each(function() {
            var instance = this ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            执行控件加载的时候的接口事件，以默认绑定的值(对象格式作为参数)
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
           opts.onloadedInterface(opts.initBind) ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            清空各个控件的值，绘制城市数据
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $.fn.cascadeData.renderCity(opts.initBind.city, this, opts) ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            如果opts.initBind.中各个值不为空，就要自动触发各个查询
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            if(opts.initBind.city.toString() !== opts.placeholderValue) {
                $.fn.cascadeData.renderArea(opts.initBind.city, opts.initBind.area, instance, opts) ;
            }
            if(opts.initBind.area.toString() !== opts.placeholderValue) {
                $.fn.cascadeData.renderStore(opts.initBind.city, opts.initBind.area, opts.initBind.store, instance, opts) ;
            }
            if(opts.initBind.store.toString() !== opts.placeholderValue) {
                $.fn.cascadeData.renderAgent(opts.initBind.city, opts.initBind.area, opts.initBind.store, opts.initBind.agent, instance, opts) ;
            }
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            当改变城市选项的时候要做的事情：
            1. 清空区域、门店和经纪人
            2. 重绘区域选项
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(this).find(opts.cityControlSelector).change(function() {
                $.fn.cascadeData.renderArea($(this).val(), opts.placeholderValue, instance, opts) ;
            }) ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            当改变区域选项的时候，清空门店、经纪人，重绘门店选项
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(this).find(opts.areaControlSelector).change(function() {                                
                $.fn.cascadeData.renderStore($(instance).find(opts.cityControlSelector).val(), $(this).val(), opts.placeholderValue, instance, opts) ;
            }) ;
            /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            当改变门店选项的时候，清空经纪人，重绘经纪人选项
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
            $(this).find(opts.storeControlSelector).change(function() {               
                $.fn.cascadeData.renderAgent($(instance).find(opts.cityControlSelector).val(), $(instance).find(opts.AreaControlSelector).val(), $(this).val(), opts.placeholderValue, instance, opts) ;
            }) ;
        }) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------    
    渲染城市数据：
    1. 清空容器下各个控件的值
    2. 重绘城市选项
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeData.renderCity = function(selectedValue, instance, opts) {
        $(instance).find(opts.cityControlSelector + "," + opts.areaControlSelector + "," + opts.storeControlSelector + "," + opts.agentControlSelector).empty() ;
        $.fn.cascadeData.request({
            apiUrl : opts.getCityListApiUrl ,
            data : "" ,
            container : $(instance).find(opts.cityControlSelector) ,
            selectedValue : selectedValue
        } , opts) ;
    } ; 
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------    
    渲染区域数据：
    1. 清空区域、门店、经纪人控件的选项
    2. 重绘区域选项
    3. 最后执行改变城市后的接口事件(以cityId和默认选中的areaId作为参数)
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeData.renderArea = function(cityId, selectedValue, instance, opts) {
        $(instance).find(opts.areaControlSelector + "," + opts.storeControlSelector + "," + opts.agentControlSelector).empty() ;
        var selectedValue = selectedValue.toString() ;
        var cityId = cityId.toString() ;
        if(cityId !== opts.placeholderValue && $(instance).find(opts.areaControlSelector).size() > 0) {                   
            $.fn.cascadeData.request({
                apiUrl : opts.getAreaListApiUrl ,
                data : { "cityId" : cityId } ,
                container : $(instance).find(opts.areaControlSelector) ,
                selectedValue : selectedValue
            } , opts) ;
        }
        opts.onChangeCityInterface(cityId, selectedValue) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------    
    渲染门店数据：
    1. 清空门店、经纪人控件的选项
    2. 重绘门店选项
    3. 最后执行改变区域后的接口事件(以areaId和默认选中的storeId作为参数)
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeData.renderStore = function(cityId, areaId, selectedValue, instance, opts) {
        $(instance).find(opts.storeControlSelector + "," + opts.agentControlSelector).empty() ;
        var selectedValue = selectedValue.toString() ;
        var areaId = areaId.toString() ;
        if(areaId !== opts.placeholderValue && $(instance).find(opts.storeControlSelector).size() > 0) {
            $.fn.cascadeData.request({
                apiUrl : opts.getStoreListApiUrl ,
                data : { "cityId" : cityId , "partnerId" : areaId } ,
                container : $(instance).find(opts.storeControlSelector) ,
                selectedValue : selectedValue
            } , opts) ;  
        }
        opts.onChangeAreaInterface(areaId, selectedValue) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------    
    渲染经纪人数据：
    1. 清空经纪人控件的选项
    2. 重绘经纪人选项
    3. 最后执行改变门店后的接口事件(以storeId和默认选中的agentId作为参数)
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeData.renderAgent = function(cityId, areaId, storeId, selectedValue, instance, opts) {
        $(instance).find(opts.agentControlSelector).empty() ;
        var selectedValue = selectedValue.toString() ;
        var storeId = storeId.toString() ;
        if(storeId !== opts.placeholderValue && $(instance).find(opts.agentControlSelector).size() > 0) {
            $.fn.cascadeData.request({
                apiUrl : opts.getAgentListApiUrl ,
                data : { "cityId" : cityId , "areaId" : areaId , "storeId" :  storeId } ,                        
                container : $(instance).find(opts.agentControlSelector) ,
                selectedValue : selectedValue
            } , opts) ;                     
        } 
        opts.onChangeStoreInterface(storeId, selectedValue) ;
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    发起Ajax请求
    params : {
        apiUrl : "" ,
        data : {} ,
        container : $() ,
        selectedValue : ""
    }
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeData.request = function(params, opts) {
        var conf = {
            url : params.apiUrl ,
            data : params.data ,
            type : "GET" ,
            dataType : opts.dataType ,            
            beforeSend : function(request) {
                request.setRequestHeader("X-Requested-With", "XMLHttpRequest");
            } ,
            error : function(e) {
                opts.onErrorInterface() ;
            } ,
            success : function(result){
                if(result.status.toString() === "200") {                    
                    var $container = $(params.container) ;
                    var selectedValue = params.selectedValue.toString() ;                    
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    清空先前的列表数据
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    $container.empty() ;
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    请选择选项给贴上
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    var placeholderSelected = (selectedValue === opts.placeholderValue) ? "selected" : "" ;
                    $container.append("<option value=\"\" " + placeholderSelected + ">请选择</option>") ; 
                    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
                    如果有清单数据就贴上
                    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
                    $(result.data).each(function() {                        
                        var selected = (selectedValue === this.id.toString()) ? "selected" : "" ;                        
                        $container.append("<option value=\"" + this.id + "\" " + selected + ">" + this.name + "</option>") ;
                    }) ;
                }
                else opts.onExceptionInterface(result.message) ;
            }
        } ;
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        发起ajax请求
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        try {
            $.ajax(conf); 
        }
        catch(e) {
            console.log("错误名称："+e.name+"\n错误描述："+e.message);
        }
    } ;
    /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    asyncsubmit默认配置
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    $.fn.cascadeData.defaults = {
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        请求的数据类型
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        dataType : "jsonp" ,        
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        通过用户ID获取城市列表接口地址，用户ID是后端直接从session里面取得的
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        getCityListApiUrl : "//10.0.18.192:8133/bzsm/areaorg/getCityListByUserId.action" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        通过城市ID获取区域列表接口地址
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        getAreaListApiUrl : "//10.0.18.192:8133/bzsm/areaorg/getPartnerByCityId.action" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        通过区域ID获取门店列表接口地址
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        getStoreListApiUrl : "//10.0.18.192:8133/bzsm/areaorg/deptListByPartnerId.action" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        通过门店ID获取经纪人列表接口地址
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        getAgentListApiUrl : "//10.0.18.192:8133/bzsm/agent/getAgentByAreaOrg.action" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        城市这个下拉框在插件容器下的选择器
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        cityControlSelector : "select[name='cityId']" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        区域这个下拉框在插件容器下的选择器
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        areaControlSelector : "select[name='areaId']" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        门店这个下拉框在插件容器下的选择器
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        storeControlSelector : "select[name='storeId']" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        经纪人这个下拉框在插件容器下的选择器
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        agentControlSelector : "select[name='agentId']" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        接口请求出错时候的接口方法
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        onErrorInterface : $.noop ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        接口的status不为200的时候处理方法，吧message当做参数处理
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        onExceptionInterface : $.noop ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        控件加载的时候的接口事件
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        onloadedInterface : $.noop ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        改变城市的时候的接口事件
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        onChangeCityInterface : $.noop ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        改变区域的时候的接口事件
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        onChangeAreaInterface : $.noop ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        改变城市的时候的接口事件
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        onChangeStoreInterface : $.noop ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        请选择选项的值，默认为""，如果用户操作改为请选择，就不发请求了
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        placeholderValue : "" ,
        /*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        城市这个下拉菜单默认绑定的选项
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        initBind : { "city" : "" , "area" : "" , "store" : "" , "agent" : ""}
    } ;
})(jQuery) ;